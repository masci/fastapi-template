name: build
on:
  push:
    branches:
      - main
      - dev


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: ${{ github.ref_name }}
  GCP_ARTIFACT_REGISTRY: 'europe-west1-docker.pkg.dev'
  GCP_ARTIFACT_REGISTRY_REPONAME: 'docker-registry'
  GCP_MAIN_SERVICE_NAME: 'fastapi-template-main'
  GCP_DEV_SERVICE_NAME: 'fastapi-template-dev'


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Install Poetry
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: 1.1.13

    - name: Setup dependencies
      run: poetry install

    - name: Run tests
      run: poetry run pytest

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: test

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Docker login
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    needs: build

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: GCP login
      id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
        token_format: 'access_token'  # do auth + generate token to be used later
        access_token_lifetime: '300s'

    - name: Add GCP Artifact Registry image name to env vars
      run: |
        echo "GCP_IMAGE=${{ env.GCP_ARTIFACT_REGISTRY }}/${{ steps.auth.outputs.project_id }}/${{ env.GCP_ARTIFACT_REGISTRY_REPONAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}" >> $GITHUB_ENV

    - name: Docker login
      uses: 'docker/login-action@v1'
      with:
        registry: ${{ env.GCP_ARTIFACT_REGISTRY }}
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'

    - name: Pull image from GHR
      run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

    - name: Push the same image to Google Artifact Registry
      run: |
        docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ env.GCP_IMAGE }}
        docker push ${{ env.GCP_IMAGE }}

    - name: Deploy Cloud Run Dev Service
      uses: 'google-github-actions/deploy-cloudrun@v0'
      if: ${{ env.IMAGE_TAG }} == 'dev'
      with:
        service: ${{ GCP_DEV_SERVICE_NAME }}
        image: ${{ env.GCP_IMAGE }}
        region: europe-west1

    - name: Deploy Cloud Run Main Service
      uses: 'google-github-actions/deploy-cloudrun@v0'
      if: ${{ env.IMAGE_TAG }} == 'main'
      with:
        service: ${{ GCP_MAIN_SERVICE_NAME }}
        image: ${{ env.GCP_IMAGE }}
        region: europe-west1